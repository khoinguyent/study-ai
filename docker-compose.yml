version: '3.8'

services:
  # API Gateway
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: study-ai-api-gateway
    ports:
      - "80:80"
    depends_on:
      - auth-service
      - document-service
      - indexing-service
      - quiz-service
    networks:
      - study-ai-network

  # Auth Service Database
  auth-db:
    image: postgres:15
    container_name: study-ai-auth-db
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    networks:
      - study-ai-network

  # Document Service Database
  document-db:
    image: postgres:15
    container_name: study-ai-document-db
    environment:
      POSTGRES_DB: document_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - document_postgres_data:/var/lib/postgresql/data
    networks:
      - study-ai-network

  # Indexing Service Database (with pgvector extension)
  indexing-db:
    image: pgvector/pgvector:pg15
    container_name: study-ai-indexing-db
    environment:
      POSTGRES_DB: indexing_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - indexing_postgres_data:/var/lib/postgresql/data
    networks:
      - study-ai-network

  # Quiz Service Database
  quiz-db:
    image: postgres:15
    container_name: study-ai-quiz-db
    environment:
      POSTGRES_DB: quiz_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - quiz_postgres_data:/var/lib/postgresql/data
    networks:
      - study-ai-network

  # Redis for caching and message queue
  redis:
    image: redis:7-alpine
    container_name: study-ai-redis
    ports:
      - "6379:6379"
    networks:
      - study-ai-network

  # MinIO for S3-compatible storage
  minio:
    image: minio/minio:latest
    container_name: study-ai-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - study-ai-network

  # Auth Service
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: study-ai-auth-service
    ports:
      - "8001:8001"
    environment:
      DATABASE_URL: postgresql://postgres:password@auth-db:5432/auth_db
      REDIS_URL: redis://redis:6379
      SECRET_KEY: your-secret-key-change-in-production
    depends_on:
      - auth-db
      - redis
    volumes:
      - ./services/auth-service:/app
    networks:
      - study-ai-network

  # Document Service
  document-service:
    build:
      context: ./services/document-service
      dockerfile: Dockerfile
    container_name: study-ai-document-service
    ports:
      - "8002:8002"
    environment:
      DATABASE_URL: postgresql://postgres:password@document-db:5432/document_db
      REDIS_URL: redis://redis:6379
      AWS_ACCESS_KEY_ID: your-access-key
      AWS_SECRET_ACCESS_KEY: your-secret-key
      AWS_REGION: us-east-1
      S3_BUCKET: study-ai-documents
      AUTH_SERVICE_URL: http://auth-service:8001
      INDEXING_SERVICE_URL: http://indexing-service:8003
    depends_on:
      - document-db
      - redis
      - auth-service
      - minio
    volumes:
      - ./services/document-service:/app
    networks:
      - study-ai-network

  # Indexing Service
  indexing-service:
    build:
      context: ./services/indexing-service
      dockerfile: Dockerfile
    container_name: study-ai-indexing-service
    ports:
      - "8003:8003"
    environment:
      DATABASE_URL: postgresql://postgres:password@indexing-db:5432/indexing_db
      REDIS_URL: redis://redis:6379
      DOCUMENT_SERVICE_URL: http://document-service:8002
    depends_on:
      - indexing-db
      - redis
      - document-service
    volumes:
      - ./services/indexing-service:/app
    networks:
      - study-ai-network

  # Quiz Service
  quiz-service:
    build:
      context: ./services/quiz-service
      dockerfile: Dockerfile
    container_name: study-ai-quiz-service
    ports:
      - "8004:8004"
    environment:
      DATABASE_URL: postgresql://postgres:password@quiz-db:5432/quiz_db
      REDIS_URL: redis://redis:6379
      OPENAI_API_KEY: your-openai-api-key
      AUTH_SERVICE_URL: http://auth-service:8001
      INDEXING_SERVICE_URL: http://indexing-service:8003
    depends_on:
      - quiz-db
      - redis
      - auth-service
      - indexing-service
    volumes:
      - ./services/quiz-service:/app
    networks:
      - study-ai-network

  # Leaf Quiz Service Database
  leaf-quiz-db:
    image: postgres:15
    container_name: study-ai-leaf-quiz-db
    environment:
      POSTGRES_DB: leaf_quiz_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - leaf_quiz_postgres_data:/var/lib/postgresql/data
    networks:
      - study-ai-network

  # Leaf Quiz Service
  leaf-quiz-service:
    build:
      context: ./services/leaf-quiz-service
      dockerfile: Dockerfile
    container_name: study-ai-leaf-quiz-service
    ports:
      - "8006:8006"
    environment:
      DATABASE_URL: postgresql://postgres:password@leaf-quiz-db:5432/leaf_quiz_db
      REDIS_URL: redis://redis:6379
      AUTH_SERVICE_URL: http://auth-service:8001
      DOCUMENT_SERVICE_URL: http://document-service:8002
      INDEXING_SERVICE_URL: http://indexing-service:8003
      HUGGINGFACE_TOKEN: ${HUGGINGFACE_TOKEN:-your_huggingface_token_here}
      QUESTION_GENERATION_MODEL: google/flan-t5-base
      DISTRACTOR_GENERATION_MODEL: google/flan-t5-base
      SERVICE_PORT: 8006
      SERVICE_HOST: 0.0.0.0
      LOG_LEVEL: INFO
    volumes:
      - ./services/leaf-quiz-service:/app
      - leaf_quiz_cache:/app/cache
    depends_on:
      - leaf-quiz-db
      - redis
      - auth-service
    networks:
      - study-ai-network

  # Web frontend service
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: study-ai-web
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      REACT_APP_API_URL: http://localhost:8000
      REACT_APP_WS_URL: ws://localhost:8000/ws
    depends_on:
      - api-gateway
      - auth-service
    volumes:
      - ./web:/app
      - /app/node_modules
    networks:
      - study-ai-network

volumes:
  auth_postgres_data:
  document_postgres_data:
  indexing_postgres_data:
  quiz_postgres_data:
  leaf_quiz_postgres_data:
  leaf_quiz_cache:
  minio_data:

networks:
  study-ai-network:
    driver: bridge 